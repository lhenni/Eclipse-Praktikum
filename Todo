TODO:
# later:
* add additions to reactions generator/builder? (fluent builder)
* add tests related to changes

# now, safe:

* import helper methods: return relative import paths everywhere instead of absolute? absolute paths actually used anywhere?
* build on github failing due to tests?
  * tests run fine locally.. at least if reactions files are pre-generated in the tests project
    * otherwise: class bodies do not get generated
  * fixed by reordering input reactions files
	   
# now, unsafe:

* fluent reaction builder seems incomplete:
  * specifying called routine parameters? passing routine builder doesn't seem to be sufficient for that..
  * routine calling another routine? -> via code block somehow

# Questions:

* commonalities.ui.tests: ComositeDecomposingCPS works, but not CompositeCPS? Shouldn't the called segment-CPS decompose already?
  * only difference: order of change-handling of decomposed changes:
    * change -> combined: for each segment-CPS -> segment-CPS: decompose -> for each decomposed -> executor
	* change -> combined: decompose -> for each decomposed -> for each segment-CPS -> executor
	
	* not a problem when using the CPS of an combined-segment which imports other segments, because the combined-segment's CPS extends decomposing-CPS and therefore there the execution order is like before.
	
* Removed AbstractSegmentCPS from dslruntime? -> A few projects then no longer have to depend on dslruntime, in order to use the segment-CPS created by the reactions-language
  * Or: declare "implements CPS" at concrete segment-CPS another time -> using the reactions CPS (passing to Vitruv) is then independent from deslruntime
    * But: adding additional processors still depends on dslruntime -> only solvable by moving DecomposingCompositeCPS inside concrete CPS, instead of AbstractReactionsCPS in dslruntime

* fluent reactions builder: Allow segments with no reactions and no routines? (ex. segments that only import other segments) -> done

* cannot disable auto-formatting on save... its not listed in the on-save-actions, but still formats all files when saving
  * current workaround: closing editor window, popup 'save?' > 'yes', and working in git-compare view ..

* somehow possible to add imports when creating the jvm model? instead of using qualified names..
  * ImportManager doesn't seem to be available during jvm model creation

---------

# optional:
* maybe associate routines facade fields with original segment? so open declaration opens the original segment with that name, and not the one overriding (importing) it
  * doesn't seem to work that simple though..
* feature idea: allow specifying an import name/alias when importing using qualified names, and then allow duplicate imports, as long as the alias is different:
  * Would allow importing a reactions segment again to access its original routines, or use them with different overrides: B->A, B->A as A_original, or B->A as A2 and then different overrides A2::routine
* feature: possibility to call overridden routine/reaction from overriding routine/reaction
  * maybe via implicit routine called 'super' or 'base': super(), super(a, b, c)
  * provided additionally to the routinesFacade, via extension, inside the userExecution
  * But: what about override hierarchy?
    * currently the base routine/reaction gets overridden multiple times, and the override top-most in the import hierarchy gets used
    * should 'super'/'base' call the base overridden routine/reaction, or the next override routine one deeper in the override hierarchy
* allow omitting routine action?
  * useful when overriding a routine with the intent to 'disable' it
* allow 'empty' reaction (no trigger and no callRoutine):
  * useful when overriding a routine with the intent to 'disable' it
  
* overriding currently requires original reactions segment name: maybe somehow allow overriding of routines without qualified names (or partly qualified due to transitive qualified-name import)?
  * allow '::routineName' (no segment/path) for included routines?
    * only 'routineName' would lead to name clash, because it is not recognised as override
		* add 'override' keyword?

* Consider reactions import A->B->C
  * (regardless of if B overrides reaction of C)
  * A wants to override that reaction, should it have to use 'C::reaction' (current behavior), or 'B::reaction', or maybe '::reaction' ?
    * with B::reaction, A wouldn't need to know where the reaction originally came from
	  * 'inheritance behavior': the C reactions are considered to be part of B now from A's point of view
	* but: the behavior of the reactions of C depend on routines in C, which need to be overridden via C::routine anyways
	  * so in the end A has to know where which reaction comes from anyways
	* also: currently duplicate reaction names are allowed

* routine signature validation prints full type name currently.. maybe print simpler name here
* maybe: signature comparison: compare parameter types of routines directly, instead of string comparison?
* add auto-completion/proposal for overridden reaction names
* add auto-completion/proposal for overridden routine names/signatures
* optional: compare performance
	
# Done:
* validation: split up large imports validation into many smaller ones
* removed environment CPS + parser, added segment-CPS, executor package-private
	* updated all projects accordingly.. (large commit message with the actual changes)
	* commonalities.ui.tests: Creating combined-CPS there now for the tests to properly run without the environment-CPS
* fluent reactions builder + tests expanded: imports, reaction overrides, routine overrides
* renamed classes and packages: mir.reactions.<segment>, <segment>ChangePropagationSpecification, ReactionsExecutor
* added import tests
------------------------
Fixed:
* ReactionsImportPath: allow representing empty path? might need to handle this special case at some places then
  * done!
* !!! included routines in imported segments: overrides are not respected properly, because:
  * A->B->C, C routines included in B facade, A overrides C routines
    * A.B.C facade created with overridden routines -> works wherever a C facade is requested
	* however: does not work inside B facade, because there the original routine methods are included -> doesn't used overridden routines facade there
	* solution: let the routine method call the routine via the routines facade ('as if qualified names were used')
	* done!
* !!! overridden routines facade routine methods requesting wrong routines facades: they need to get the routines facade of the overriding segment!
  * done!
* passing around of partly import paths in overridden routines facades: ugly?
  * instead: pass around full import path again, and each overridden facade picks the import path part it needs? (subPath ending with the facade's segment)
  * done!
* !!! includes routines not aware of overrides: original routines methods being included.. instead of override ones
  * Fixed: The fully qualified routine names were not correct.


# To test:
* validation: require same model pair when importing something
* validation: no override of non-existent reactions/routines (compare signatures for routines, names for reactions)
* language change: reactions names are no longer optional (required for overrides)
* language change: forbid routine names starting with _ to prevent name clashes with internal (not visible) methods of the routines facade



ERRORS:

1) while typing reaction body:

reaction Base::CreateRootTest {
	after element minimal
}
* somehow related to label provider? .. we are using the default here

!ENTRY org.eclipse.jface 4 2 2018-01-30 17:19:59.714
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:107)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:141)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:946)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:117)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil.lambda$0(JFaceUtil.java:44)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:173)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1025)
	at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:475)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil.lambda$0(JFaceUtil.java:44)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:173)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:2159)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:840)
	at org.eclipse.jface.viewers.AbstractTreeViewer.lambda$0(AbstractTreeViewer.java:817)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:792)
	at org.eclipse.jface.viewers.TreeViewer.createChildren(TreeViewer.java:595)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:763)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand(AbstractTreeViewer.java:1624)
	at org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget(AbstractTreeViewer.java:2490)
	at org.eclipse.jface.viewers.StructuredViewer.setSelectionToWidget(StructuredViewer.java:1759)
	at org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget(AbstractTreeViewer.java:2959)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1715)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1075)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:380)
	at org.eclipse.xtext.ui.editor.outline.actions.OutlineWithEditorLinker.selectInTreeView(OutlineWithEditorLinker.java:131)
	at org.eclipse.xtext.ui.editor.outline.actions.OutlineWithEditorLinker$TextListener.selectionChanged(OutlineWithEditorLinker.java:72)
	at org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2628)
	at org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2576)
	at org.eclipse.jface.text.TextViewer$5.run(TextViewer.java:2555)
	at org.eclipse.swt.widgets.Display.runTimer(Display.java:4341)
	at org.eclipse.swt.widgets.Display.messageProc(Display.java:3419)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1472)
	
2) * error when auto complete on regular import -> might also be the case without modularization changes
1    [main] WARN  org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider  - Error in polymorphic dispatcher : null
java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextNode(HashMap.java:1429)
	at java.util.HashMap$KeyIterator.next(HashMap.java:1453)
	at com.google.common.collect.TransformedIterator.next(TransformedIterator.java:47)
	at com.google.common.collect.Iterators$6.computeNext(Iterators.java:616)
	at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:145)
	at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:140)
	at com.google.common.collect.Iterators$6.computeNext(Iterators.java:615)
	at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:145)
	at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:140)
	at com.google.common.collect.MultitransformedIterator.hasNext(MultitransformedIterator.java:47)
	at org.eclipse.xtext.scoping.impl.ImportScope.getAliasedElements(ImportScope.java:119)
	at org.eclipse.xtext.scoping.impl.ImportScope.getAllLocalElements(ImportScope.java:92)
	at org.eclipse.xtext.scoping.impl.ImportScope.getAllElements(ImportScope.java:71)
	at org.eclipse.xtext.scoping.impl.ImportScope.getAllElements(ImportScope.java:70)
	at org.eclipse.xtext.scoping.impl.ImportScope.getAllElements(ImportScope.java:70)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider$ReferenceProposalCreator.queryScope(AbstractJavaBasedContentProposalProvider.java:166)
	at org.eclipse.xtext.xbase.ui.contentassist.XbaseReferenceProposalCreator.queryScope(XbaseReferenceProposalCreator.java:318)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider$ReferenceProposalCreator.lookupCrossReference(AbstractJavaBasedContentProposalProvider.java:147)
	at org.eclipse.xtext.xbase.ui.contentassist.XbaseReferenceProposalCreator.lookupCrossReference(XbaseReferenceProposalCreator.java:134)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider$ReferenceProposalCreator.lookupCrossReference(AbstractJavaBasedContentProposalProvider.java:133)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider.lookupCrossReference(AbstractJavaBasedContentProposalProvider.java:261)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider.lookupCrossReference(AbstractJavaBasedContentProposalProvider.java:255)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider.lookupCrossReference(AbstractJavaBasedContentProposalProvider.java:233)
	at org.eclipse.xtext.xbase.ui.contentassist.XbaseProposalProvider.lookupCrossReference(XbaseProposalProvider.java:282)
	at tools.vitruv.dsls.mirbase.ui.contentassist.AbstractMirBaseProposalProvider.completeMetamodelImport_Package(AbstractMirBaseProposalProvider.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.eclipse.xtext.util.PolymorphicDispatcher.invoke(PolymorphicDispatcher.java:302)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider.invokeMethod(AbstractJavaBasedContentProposalProvider.java:300)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider.completeAssignment(AbstractJavaBasedContentProposalProvider.java:205)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractContentProposalProvider$DefaultContentAssistProcessorSwitch.caseAssignment(AbstractContentProposalProvider.java:66)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractContentProposalProvider$DefaultContentAssistProcessorSwitch.caseAssignment(AbstractContentProposalProvider.java:1)
	at org.eclipse.xtext.util.XtextSwitch.doSwitch(XtextSwitch.java:144)
	at org.eclipse.emf.ecore.util.Switch.doSwitch(Switch.java:53)
	at org.eclipse.emf.ecore.util.Switch.doSwitch(Switch.java:69)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractContentProposalProvider$DefaultContentAssistProcessorSwitch.accept(AbstractContentProposalProvider.java:72)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractContentProposalProvider.createProposals(AbstractContentProposalProvider.java:110)
	at org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider.createProposals(AbstractJavaBasedContentProposalProvider.java:275)
	at org.eclipse.xtext.ui.editor.contentassist.CompletionProposalComputer.exec(CompletionProposalComputer.java:52)
	at org.eclipse.xtext.ui.editor.contentassist.CompletionProposalComputer.exec(CompletionProposalComputer.java:1)
	at org.eclipse.xtext.resource.OutdatedStateManager.exec(OutdatedStateManager.java:91)
	at org.eclipse.xtext.ui.editor.model.XtextDocument$XtextDocumentLocker.internalReadOnly(XtextDocument.java:520)
	at org.eclipse.xtext.ui.editor.model.XtextDocument$XtextDocumentLocker.priorityReadOnly(XtextDocument.java:485)
	at org.eclipse.xtext.ui.editor.model.XtextDocument.priorityReadOnly(XtextDocument.java:142)
	at org.eclipse.xtext.ui.editor.contentassist.RepeatedContentAssistProcessor.computeCompletionProposals(RepeatedContentAssistProcessor.java:111)
	at org.eclipse.xtext.ui.editor.contentassist.RepeatedContentAssistProcessor.computeCompletionProposals(RepeatedContentAssistProcessor.java:80)
	at org.eclipse.jface.text.contentassist.ContentAssistant$3.run(ContentAssistant.java:2007)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:2004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:560)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:555)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:489)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:936)
	at org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1461)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1472)
